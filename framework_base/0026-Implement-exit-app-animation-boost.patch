From b1e61739dcc0aa7946e5101ebed4712b55c0066d Mon Sep 17 00:00:00 2001
From: minaripenguin <minaripenguin@users.noreply.github.com>
Date: Tue, 6 Feb 2024 16:41:02 +0300
Subject: [PATCH] services: Implement exit app animation boost

---
 .../java/com/android/server/wm/TaskFragment.java    | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/services/core/java/com/android/server/wm/TaskFragment.java b/services/core/java/com/android/server/wm/TaskFragment.java
index f428d3e2237ab..5834ac0e26d75 100644
--- a/services/core/java/com/android/server/wm/TaskFragment.java
+++ b/services/core/java/com/android/server/wm/TaskFragment.java
@@ -84,7 +84,9 @@
 import android.content.res.Configuration;
 import android.graphics.Point;
 import android.graphics.Rect;
+import android.hardware.power.Boost;
 import android.os.IBinder;
+import android.os.PowerManagerInternal;
 import android.os.RemoteException;
 import android.os.UserHandle;
 import android.util.DisplayMetrics;
@@ -103,6 +105,7 @@
 import com.android.internal.util.function.pooled.PooledLambda;
 import com.android.internal.util.function.pooled.PooledPredicate;
 import com.android.server.am.HostingRecord;
+import com.android.server.LocalServices;
 import com.android.server.pm.parsing.pkg.AndroidPackage;
 
 import java.io.FileDescriptor;
@@ -1368,6 +1371,9 @@ final boolean resumeTopActivity(ActivityRecord prev, ActivityOptions options,
                 dc.prepareAppTransition(TRANSIT_NONE);
             } else {
                 dc.prepareAppTransition(TRANSIT_OPEN);
+                if (next != null) {
+                    doActivityBoost();
+                }
             }
         }
 
@@ -1540,6 +1546,13 @@ final boolean resumeTopActivity(ActivityRecord prev, ActivityOptions options,
         return true;
     }
 
+    protected void doActivityBoost() {
+        PowerManagerInternal mPowerManagerInternal = LocalServices.getService(PowerManagerInternal.class);
+        if (mPowerManagerInternal != null) {
+            mPowerManagerInternal.setPowerBoost(Boost.DISPLAY_UPDATE_IMMINENT, 80);
+        }
+    }
+
     boolean shouldSleepOrShutDownActivities() {
         return shouldSleepActivities() || mAtmService.mShuttingDown;
     }
